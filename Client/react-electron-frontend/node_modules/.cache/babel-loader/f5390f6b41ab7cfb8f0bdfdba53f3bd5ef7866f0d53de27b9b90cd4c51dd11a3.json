{"ast":null,"code":"import _inherits from\"C:/Users/Flinn/Documents/Chat/Client/react-electron-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"C:/Users/Flinn/Documents/Chat/Client/react-electron-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import _createClass from\"C:/Users/Flinn/Documents/Chat/Client/react-electron-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _classCallCheck from\"C:/Users/Flinn/Documents/Chat/Client/react-electron-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import Sidebar from\"./Sidebar\";import React from\"react\";import'./Chatwindow.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var person1=new Sidebar.ContactClass('Flinn',2);var person2=new Sidebar.ContactClass('Alex',1);var contacts=[person1,person2];var ClassicMessage=/*#__PURE__*/_createClass(function ClassicMessage(from,to,text,timestamp){_classCallCheck(this,ClassicMessage);this.from=void 0;this.to=void 0;this.text=void 0;this.timestamp=void 0;this.from=from;this.to=to;this.text=text;this.timestamp=timestamp;});function gen_key_from_ClassicMessage(message){return message.from+message.to+message.timestamp;}function Message(message){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"p\",{children:gen_key_from_ClassicMessage(message)})},gen_key_from_ClassicMessage(message));}var ChatWindow=/*#__PURE__*/function(_React$Component){_inherits(ChatWindow,_React$Component);var _super=_createSuper(ChatWindow);function ChatWindow(args){var _this;_classCallCheck(this,ChatWindow);_this=_super.call(this,args);_this.UpdateTimer=undefined;_this.state={messages:_this.fetch_messages()};return _this;}_createClass(ChatWindow,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.UpdateTimer=setInterval(function(){return _this2.update_messages();},500);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){clearInterval(this.UpdateTimer);}},{key:\"update_messages\",value:function update_messages(){this.setState({messages:this.fetch_messages()});}},{key:\"fetch_messages\",value:function fetch_messages(){var Message1=new ClassicMessage('flinnfx#101','tcgamer#102','This is some random Junk','21 Dez 2021 11:50:11');var Message2=new ClassicMessage('tcgamer#102','flinnfx#101','This is way more junk','21 Dez 2021 11:51:22');var msgs=[Message1,Message2];return msgs;}},{key:\"render\",value:function render(){var messages=this.state.messages;console.log(typeof messages);console.log(messages);return/*#__PURE__*/_jsxs(\"div\",{id:\"ChatWindowMain\",children:[Sidebar.Sidebar(Sidebar.example_contacts),messages.map(function(message,i){return Message(message);})]},\"ChatWindowMainKey\");}}]);return ChatWindow;}(React.Component);export default ChatWindow;","map":{"version":3,"names":["Sidebar","React","person1","ContactClass","person2","contacts","ClassicMessage","from","to","text","timestamp","gen_key_from_ClassicMessage","message","Message","ChatWindow","args","UpdateTimer","undefined","state","messages","fetch_messages","setInterval","update_messages","clearInterval","setState","Message1","Message2","msgs","console","log","example_contacts","map","i","Component"],"sources":["C:/Users/Flinn/Documents/Chat/Client/react-electron-frontend/src/Chatwindow.tsx"],"sourcesContent":["import Sidebar from \"./Sidebar\";\nimport React from \"react\";\nimport './Chatwindow.css'\nconst person1 = new Sidebar.ContactClass('Flinn', 2)\nconst person2 = new Sidebar.ContactClass('Alex', 1)\nconst contacts = [person1, person2]\n\nclass ClassicMessage {\n    from: string;\n    to: string;\n    text: string;\n    timestamp: string;\n\n    public constructor(from: string, to: string, text: string, timestamp: string) {\n        this.from = from;\n        this.to = to;\n        this.text = text;\n        this.timestamp = timestamp\n    }\n}\n\nfunction gen_key_from_ClassicMessage(message: ClassicMessage) {\n    return message.from + message.to + message.timestamp\n}\n\nfunction Message(message: ClassicMessage) {\n    return (\n        <div key={gen_key_from_ClassicMessage(message)}>\n            {\n                // Add Styling so the Message actually looks good\n            }\n            <p>{gen_key_from_ClassicMessage(message)}</p>\n        </div>\n    )\n}\n\nclass ChatWindow extends React.Component<{}, {messages: Array<ClassicMessage>}> {\n    UpdateTimer: NodeJS.Timer | undefined = undefined\n    constructor(args: any) {\n        super(args);\n        this.state = {messages: this.fetch_messages()}\n    }\n\n    componentDidMount() {\n        this.UpdateTimer = setInterval(() => this.update_messages(),500);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.UpdateTimer)\n    }\n\n\n    update_messages() {\n        this.setState({messages: this.fetch_messages()});\n    }\n\n    fetch_messages() {\n        const Message1 = new ClassicMessage('flinnfx#101', 'tcgamer#102', 'This is some random Junk', '21 Dez 2021 11:50:11')\n        const Message2 = new ClassicMessage('tcgamer#102','flinnfx#101', 'This is way more junk', '21 Dez 2021 11:51:22')\n\n        const msgs: Array<ClassicMessage> = [Message1, Message2];\n        return msgs\n    }\n\n    render() {\n        const messages = this.state.messages\n        console.log(typeof messages)\n        console.log(messages)\n        return (\n                <div key=\"ChatWindowMainKey\" id=\"ChatWindowMain\">\n                    {Sidebar.Sidebar(Sidebar.example_contacts)}\n                    {messages.map(function (message, i) {\n                        return Message(message);\n                    })}\n                </div>\n        )\n    }\n\n}\n\nexport default ChatWindow"],"mappings":"wjBAAA,MAAOA,QAAO,KAAM,WAAW,CAC/B,MAAOC,MAAK,KAAM,OAAO,CACzB,MAAO,kBAAkB,yFACzB,GAAMC,QAAO,CAAG,GAAIF,QAAO,CAACG,YAAY,CAAC,OAAO,CAAE,CAAC,CAAC,CACpD,GAAMC,QAAO,CAAG,GAAIJ,QAAO,CAACG,YAAY,CAAC,MAAM,CAAE,CAAC,CAAC,CACnD,GAAME,SAAQ,CAAG,CAACH,OAAO,CAAEE,OAAO,CAAC,IAE7BE,eAAc,2BAMhB,wBAAmBC,IAAY,CAAEC,EAAU,CAAEC,IAAY,CAAEC,SAAiB,CAAE,2CAL9EH,IAAI,aACJC,EAAE,aACFC,IAAI,aACJC,SAAS,QAGL,IAAI,CAACH,IAAI,CAAGA,IAAI,CAChB,IAAI,CAACC,EAAE,CAAGA,EAAE,CACZ,IAAI,CAACC,IAAI,CAAGA,IAAI,CAChB,IAAI,CAACC,SAAS,CAAGA,SAAS,CAC9B,CAAC,EAGL,QAASC,4BAA2B,CAACC,OAAuB,CAAE,CAC1D,MAAOA,QAAO,CAACL,IAAI,CAAGK,OAAO,CAACJ,EAAE,CAAGI,OAAO,CAACF,SAAS,CACxD,CAEA,QAASG,QAAO,CAACD,OAAuB,CAAE,CACtC,mBACI,kCAII,mBAAID,2BAA2B,CAACC,OAAO,CAAC,EAAK,EAJvCD,2BAA2B,CAACC,OAAO,CAAC,CAKxC,CAEd,CAAC,GAEKE,WAAU,oHAEZ,oBAAYC,IAAS,CAAE,4CACnB,uBAAMA,IAAI,EAAE,MAFhBC,WAAW,CAA6BC,SAAS,CAG7C,MAAKC,KAAK,CAAG,CAACC,QAAQ,CAAE,MAAKC,cAAc,EAAE,CAAC,cAClD,CAAC,wDAED,4BAAoB,iBAChB,IAAI,CAACJ,WAAW,CAAGK,WAAW,CAAC,iBAAM,OAAI,CAACC,eAAe,EAAE,GAAC,GAAG,CAAC,CACpE,CAAC,oCAED,+BAAuB,CACnBC,aAAa,CAAC,IAAI,CAACP,WAAW,CAAC,CACnC,CAAC,+BAGD,0BAAkB,CACd,IAAI,CAACQ,QAAQ,CAAC,CAACL,QAAQ,CAAE,IAAI,CAACC,cAAc,EAAE,CAAC,CAAC,CACpD,CAAC,8BAED,yBAAiB,CACb,GAAMK,SAAQ,CAAG,GAAInB,eAAc,CAAC,aAAa,CAAE,aAAa,CAAE,0BAA0B,CAAE,sBAAsB,CAAC,CACrH,GAAMoB,SAAQ,CAAG,GAAIpB,eAAc,CAAC,aAAa,CAAC,aAAa,CAAE,uBAAuB,CAAE,sBAAsB,CAAC,CAEjH,GAAMqB,KAA2B,CAAG,CAACF,QAAQ,CAAEC,QAAQ,CAAC,CACxD,MAAOC,KAAI,CACf,CAAC,sBAED,iBAAS,CACL,GAAMR,SAAQ,CAAG,IAAI,CAACD,KAAK,CAACC,QAAQ,CACpCS,OAAO,CAACC,GAAG,CAAC,MAAOV,SAAQ,CAAC,CAC5BS,OAAO,CAACC,GAAG,CAACV,QAAQ,CAAC,CACrB,mBACQ,aAA6B,EAAE,CAAC,gBAAgB,WAC3CnB,OAAO,CAACA,OAAO,CAACA,OAAO,CAAC8B,gBAAgB,CAAC,CACzCX,QAAQ,CAACY,GAAG,CAAC,SAAUnB,OAAO,CAAEoB,CAAC,CAAE,CAChC,MAAOnB,QAAO,CAACD,OAAO,CAAC,CAC3B,CAAC,CAAC,GAJG,mBAAmB,CAKtB,CAElB,CAAC,wBAxCoBX,KAAK,CAACgC,SAAS,EA4CxC,cAAenB,WAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}