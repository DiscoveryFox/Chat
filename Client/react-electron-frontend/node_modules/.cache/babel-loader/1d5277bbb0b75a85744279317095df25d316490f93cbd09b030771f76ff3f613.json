{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Flinn\\\\Documents\\\\Chat\\\\Client\\\\react-electron-frontend\\\\src\\\\Chatwindow.tsx\";\nimport Sidebar from \"./Sidebar\";\nimport React from \"react\";\nimport './Chatwindow.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst person1 = new Sidebar.ContactClass('Flinn', 2);\nconst person2 = new Sidebar.ContactClass('Alex', 1);\nconst contacts = [person1, person2];\n\n// TODO: Find out why there is a white border at the top of the react page.\n\nclass ClassicMessage {\n  constructor(from, to, text, timestamp) {\n    this.from = void 0;\n    this.to = void 0;\n    this.text = void 0;\n    this.timestamp = void 0;\n    this.from = from;\n    this.to = to;\n    this.text = text;\n    this.timestamp = timestamp;\n  }\n}\nfunction gen_key_from_ClassicMessage(message) {\n  return message.from + message.to + message.timestamp;\n}\nfunction fetch_username_from_api() {\n  fetch('http://127.0.0.1:5000/get_my_username').then(r => {\n    console.log(r);\n  });\n  let req = new XMLHttpRequest();\n  req.open('GET', 'http://127.0.0.1:5000/get_my_username');\n  req.setRequestHeader('Cross-Origin-Recourse-Policy', 'no-cors');\n  req.setRequestHeader('Access-Control-Allow-Origin', 'True');\n  req.send();\n  console.log(req.response);\n}\nfunction get_own_username() {\n  const username = localStorage.getItem('myUserName');\n  if (username === null) {\n    return fetch_username_from_api();\n  } else {\n    return username;\n  }\n}\nfunction Message(message) {\n  if (message.from === get_own_username()) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SentMessage\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: gen_key_from_ClassicMessage(message)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, gen_key_from_ClassicMessage(message), false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ReceivedMessage\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: gen_key_from_ClassicMessage(message)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, gen_key_from_ClassicMessage(message), false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this);\n  }\n}\n_c = Message;\nclass ChatWindow extends React.Component {\n  constructor(args) {\n    super(args);\n    this.UpdateTimer = undefined;\n    this.state = {\n      messages: this.fetch_messages()\n    };\n  }\n  componentDidMount() {\n    this.UpdateTimer = setInterval(() => this.update_messages(), 500);\n  }\n  componentWillUnmount() {\n    clearInterval(this.UpdateTimer);\n  }\n  update_messages() {\n    this.setState({\n      messages: this.fetch_messages()\n    });\n  }\n  fetch_messages() {\n    const Message1 = new ClassicMessage('flinnfx#101', 'tcgamer#102', 'This is some random Junk', '21 Dez 2021 11:50:11');\n    const Message2 = new ClassicMessage('tcgamer#102', 'flinnfx#101', 'This is way more junk', '21 Dez 2021 11:51:22');\n    const msgs = [Message1, Message2];\n    return msgs;\n  }\n  render() {\n    const messages = this.state.messages;\n    console.log(typeof messages);\n    console.log(messages);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"ChatWindowMain\",\n      children: [Sidebar.Sidebar(Sidebar.example_contacts), messages.map(function (message, i) {\n        return Message(message);\n      })]\n    }, \"ChatWindowMainKey\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }, this);\n  }\n}\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"names":["Sidebar","React","person1","ContactClass","person2","contacts","ClassicMessage","constructor","from","to","text","timestamp","gen_key_from_ClassicMessage","message","fetch_username_from_api","fetch","then","r","console","log","req","XMLHttpRequest","open","setRequestHeader","send","response","get_own_username","username","localStorage","getItem","Message","ChatWindow","Component","args","UpdateTimer","undefined","state","messages","fetch_messages","componentDidMount","setInterval","update_messages","componentWillUnmount","clearInterval","setState","Message1","Message2","msgs","render","example_contacts","map","i"],"sources":["C:/Users/Flinn/Documents/Chat/Client/react-electron-frontend/src/Chatwindow.tsx"],"sourcesContent":["import Sidebar from \"./Sidebar\";\nimport React from \"react\";\nimport './Chatwindow.css'\nconst person1 = new Sidebar.ContactClass('Flinn', 2)\nconst person2 = new Sidebar.ContactClass('Alex', 1)\nconst contacts = [person1, person2]\n\n// TODO: Find out why there is a white border at the top of the react page.\n\nclass ClassicMessage {\n    from: string;\n    to: string;\n    text: string;\n    timestamp: string;\n\n    public constructor(from: string, to: string, text: string, timestamp: string) {\n        this.from = from;\n        this.to = to;\n        this.text = text;\n        this.timestamp = timestamp\n    }\n}\n\nfunction gen_key_from_ClassicMessage(message: ClassicMessage) {\n    return message.from + message.to + message.timestamp\n}\n\nfunction fetch_username_from_api() {\n    fetch('http://127.0.0.1:5000/get_my_username').then(r => {\n        console.log(r);\n    });\n\n    let req = new XMLHttpRequest()\n    req.open('GET', 'http://127.0.0.1:5000/get_my_username')\n    req.setRequestHeader('Cross-Origin-Recourse-Policy', 'no-cors')\n    req.setRequestHeader('Access-Control-Allow-Origin', 'True')\n\n    req.send()\n    console.log(req.response)\n\n}\n\nfunction get_own_username() {\n    const username = localStorage.getItem('myUserName');\n    if(username === null) {\n        return fetch_username_from_api();\n    } else {\n        return username\n    }\n}\n\nfunction Message(message: ClassicMessage) {\n    if(message.from === get_own_username()) {\n        return (\n            <div key={gen_key_from_ClassicMessage(message)} className=\"SentMessage\">\n                {\n                    // Add Styling so the Message actually looks good\n                }\n                <p>{gen_key_from_ClassicMessage(message)}</p>\n            </div>\n        )\n    } else {\n        return (\n            <div key={gen_key_from_ClassicMessage(message)} className=\"ReceivedMessage\">\n                {\n                    // Add Styling so the Message actually looks good\n                }\n                <p>{gen_key_from_ClassicMessage(message)}</p>\n            </div>\n        )\n    }\n\n}\n\nclass ChatWindow extends React.Component<{}, {messages: Array<ClassicMessage>}> {\n    UpdateTimer: NodeJS.Timer | undefined = undefined\n    constructor(args: any) {\n        super(args);\n        this.state = {messages: this.fetch_messages()}\n    }\n\n    componentDidMount() {\n        this.UpdateTimer = setInterval(() => this.update_messages(),500);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.UpdateTimer)\n    }\n\n\n    update_messages() {\n        this.setState({messages: this.fetch_messages()});\n    }\n\n    fetch_messages() {\n        const Message1 = new ClassicMessage('flinnfx#101', 'tcgamer#102', 'This is some random Junk', '21 Dez 2021 11:50:11')\n        const Message2 = new ClassicMessage('tcgamer#102','flinnfx#101', 'This is way more junk', '21 Dez 2021 11:51:22')\n\n        const msgs: Array<ClassicMessage> = [Message1, Message2];\n        return msgs\n    }\n\n    render() {\n        const messages = this.state.messages\n        console.log(typeof messages)\n        console.log(messages)\n        return (\n                <div key=\"ChatWindowMainKey\" id=\"ChatWindowMain\">\n                    {Sidebar.Sidebar(Sidebar.example_contacts)}\n                    {messages.map(function (message, i) {\n                        return Message(message);\n                    })}\n                </div>\n        )\n    }\n\n}\n\nexport default ChatWindow"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}